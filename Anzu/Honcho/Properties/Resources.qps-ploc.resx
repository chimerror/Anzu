<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="HonchoIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\coloredcaptalistpicture.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ExitMenuName" xml:space="preserve">
    <value>[74046][!!_É&amp;хîт_!!]</value>
    <comment>Shown on the Exit item of the menu.</comment>
  </data>
  <data name="HonchoToolTip" xml:space="preserve">
    <value>[0FCA0][!!_Âήźú Ħóйċђô_!!]</value>
    <comment>Shown as a tooltip for the Honcho Notification Tray Item</comment>
  </data>
  <data name="BreakScheduleDailyText" xml:space="preserve">
    <value>[D69BD][!!_đãìļў._!!]</value>
    <comment>Shown when scheduling daily.</comment>
  </data>
  <data name="BreakScheduleOnCertainDaysOfTheWeekText" xml:space="preserve">
    <value>[F8136][!!_òή ċéřťãìη đàўŝ õƒ τħé ŵéêĸ:_!!!!!!!!]</value>
    <comment>Shown when scheduling on certain days of the week.</comment>
  </data>
  <data name="BreakScheduleIndefinitelyText" xml:space="preserve">
    <value>[0B9A5][!!_ìиďéƒįиìťêĺŷ._!!]</value>
    <comment>Shown when scheduling indefinitely</comment>
  </data>
  <data name="BreakScheduleEveryNumberOfDaysText" xml:space="preserve">
    <value>[3748B][!!_èνęŗý ηúmьêѓ õƒ đãýş:_!!!!!!]</value>
    <comment>Shown when scheduling every number of days.</comment>
  </data>
  <data name="RepeatAmountUntilSpecificTimeText" xml:space="preserve">
    <value>[5F46C][!!_ûηтìļ â šþęčìƒíč ţíмę: _!!!!!!]</value>
    <comment>Shown when repeating until a specific time.</comment>
  </data>
  <data name="RepeatAmountUntilCertainDurationText" xml:space="preserve">
    <value>[8BDB3][!!_ƒóŗ â ĉęѓťàįи ďúŕáťîôη:_!!!!!!]</value>
    <comment>Shown when repeating for a certain duration.</comment>
  </data>
  <data name="RepeatAmountOnceText" xml:space="preserve">
    <value>[D092C][!!_ôйļŷ òήćę._!!]</value>
    <comment>Shown when repeating once.</comment>
  </data>
  <data name="RepeatAmountIndefinitelyText" xml:space="preserve">
    <value>[E43B9][!!_įиđèƒîήîţęłÿ._!!]</value>
    <comment>Shown when repeating indefinitely.</comment>
  </data>
  <data name="RepeatAmountCertainNumberOfTimesText" xml:space="preserve">
    <value>[597CC][!!_ƒõř ã ćèŗтàîй йúмъèѓ õƒ тîmęŝ:_!!!!!!!!]</value>
    <comment>Shown when repeating for a certain number of times.</comment>
  </data>
  <data name="StartingTimeSpecificTimeText" xml:space="preserve">
    <value>[FD951][!!_âτ â śрęćíƒìč ťìмê: _!!!!!!]</value>
    <comment>Shown when starting at a specific time.</comment>
  </data>
  <data name="StartingTimeNowText" xml:space="preserve">
    <value>[F5A9B][!!_ηôẃ._!!]</value>
    <comment>Shown when starting now.</comment>
  </data>
  <data name="StartingTimeAfterTheHourText" xml:space="preserve">
    <value>[5A0F5][!!_áƒţéѓ ťħè ĥôµř áт: _!!!!!!]</value>
    <comment>Shown when starting at a time after the hour.</comment>
  </data>
  <data name="BreakDurationLabelText" xml:space="preserve">
    <value>[28338][!!_Ţáĸê â ßřêáķ ƒòѓ_!!!!]</value>
    <comment>Shown before the break duration drop down.</comment>
  </data>
  <data name="BreakRepeatLabelText" xml:space="preserve">
    <value>[28ADE][!!_Кéèр Ţãķîήĝ Βѓèáĸś_!!!!!!]</value>
    <comment>Shown before the break repeat type drop down.</comment>
  </data>
  <data name="BreakIntervalLabelText" xml:space="preserve">
    <value>[25857][!!_Τâќè à βŗęàĸ ÉνêŗУ_!!!!!!]</value>
    <comment>Shown before the break interval drop down.</comment>
  </data>
  <data name="BreakStartLabelText" xml:space="preserve">
    <value>[38A8B][!!_Ŝтâŗť Ţâķíиġ Вřéàќŝ_!!!!!!]</value>
    <comment>Shown before the break starting time drop down.</comment>
  </data>
  <data name="BreakScheduleLabelText" xml:space="preserve">
    <value>[DCC32][!!_Şćћèðûłę Ьѓęáќś ţò Ĥáρρèη_!!!!!!!!]</value>
    <comment>Shown before the break schedule type drop down.</comment>
  </data>
  <data name="ScheduleNewBreakMenuName" xml:space="preserve">
    <value>[2F77F][!!_Sčђèðµĺê &amp;nèŵ ьѓéãк..._!!!!!!]</value>
    <comment>Shown on the Schedule new break item of the menu.</comment>
  </data>
  <data name="BreakUntilSpecificTimeText" xml:space="preserve">
    <value>[EDBFC][!!_á şрèĉîƒíċ ţìmê:_!!!!]</value>
    <comment>Shown when scheduling breaks that will end at a specific time.</comment>
  </data>
  <data name="BreakUntilSpecificDurationText" xml:space="preserve">
    <value>[D1FE5][!!_á šρéčįƒìċ đµѓáτíõи ħáş ρâššéď:_!!!!!!!!!!]</value>
    <comment>Shown when scheduling breaks that will end when the specific duration has passed.</comment>
  </data>
  <data name="BreakUntilLabelText" xml:space="preserve">
    <value>[DA064][!!_Ќęéр Ŝčћéđùļîήġ Вѓèãќş Ùитįł_!!!!!!!!]</value>
    <comment>Shown on the label for the drop down that controls how long a schedule should continue.</comment>
  </data>
  <data name="BreakUntilIndefinitelyText" xml:space="preserve">
    <value>[E4B96][!!_тћę éйð òƒ ţímę._!!!!]</value>
    <comment>Shown when scheduling breaks that will run on specific days indefinitely.</comment>
  </data>
  <data name="BadgererWindowMaximizedText" xml:space="preserve">
    <value>[FA483][!!_мã×ímîźèđ ηóѓмáł ẃîηďóẅ_!!!!!!]</value>
    <comment>Shown for the Badgerer maximized normal window mode.</comment>
  </data>
  <data name="BadgererWindowUnmaximizedText" xml:space="preserve">
    <value>[E65CF][!!_ùйmá×įмíźęđ йõŕмâľ ẁíиðôẅ_!!!!!!!!]</value>
    <comment>Shown for the Badgerer unmaximized window mode.</comment>
  </data>
  <data name="BadgererWindowOverlayText" xml:space="preserve">
    <value>[D70B1][!!_ôνéѓĺâУ ẅíηðõẁ_!!!!]</value>
    <comment>Shown for the Badgerer overlay window mode.</comment>
  </data>
  <data name="BadgererWindowDisplayLabel" xml:space="preserve">
    <value>[64C09][!!_ÐîśþļâУ Вàďġęŕéŗ Ẁíηðôŵ ãš:_!!!!!!!!]</value>
    <comment>Shown before the drop-down to set how the Badgerer window is displayed.</comment>
  </data>
  <data name="CancelButtonText" xml:space="preserve">
    <value>[D9A9C][!!_Ćãηćèł_!!]</value>
    <comment>Shown on the Cancel button.</comment>
  </data>
  <data name="FriendlyNameLabelText" xml:space="preserve">
    <value>[6DEFA][!!_₣ŕìêηďĺÿ Ňáмê_!!]</value>
    <comment>Shown before the text box for the friendly name.</comment>
  </data>
  <data name="OkButtonText" xml:space="preserve">
    <value>[EEA48][!!_ÔĶ_!!]</value>
    <comment>Shown on the OK button.</comment>
  </data>
  <data name="LockScreenCheckboxText" xml:space="preserve">
    <value>[D3A72][!!_Ļõćќ ţнè śĉřêęи_!!!!]</value>
    <comment>Shown on the check box to lock the screen during a break.</comment>
  </data>
  <data name="ScheduleNewBreakTitleBarText" xml:space="preserve">
    <value>[8FB96][!!_Ŝĉĥęďµľé Ñęŵ Βřèáќ_!!!!!!]</value>
    <comment>Shown on the dialog to schedule a new break.</comment>
  </data>
  <data name="BadgererDisplayOptionsGroupBoxText" xml:space="preserve">
    <value>[3733D][!!_Ŵћęй Ţáĸìйġ ã Βŕęâк:_!!!!!!]</value>
    <comment>Shown on the group box containing items concerning the display of the Badgerer program when taking a break.</comment>
  </data>
  <data name="BreakOptionsGroupBoxText" xml:space="preserve">
    <value>[3A06B][!!_βŕęâќ Ĺéиĝтħ áйð Ìйтęŕνàļ:_!!!!!!!!]</value>
    <comment>Shown on the group box containing the break length and interval settings.</comment>
  </data>
  <data name="ScheduleOptionsGroupBoxText" xml:space="preserve">
    <value>[DAF13][!!_Šċħêðµĺìηĝ Õþтíõйş:_!!!!!!]</value>
    <comment>Shown on the group box containing the scheduling options.</comment>
  </data>
</root>